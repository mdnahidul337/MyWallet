import { Currency } from '@/types/wallet';

export const currencySymbols: Record<Currency, string> = {
  USD: '$',
  EUR: '€',
  GBP: '£',
  JPY: '¥',
  CAD: 'C$',
  AUD: 'A$',
  CNY: '¥',
  INR: '₹',
  BDT: '৳',
  PKR: '₨',
  LKR: '₨',
  NPR: '₨',
  MYR: 'RM',
  SGD: 'S$',
  THB: '฿',
  VND: '₫',
  IDR: 'Rp',
  PHP: '₱',
  KRW: '₩',
  TWD: 'NT$',
  HKD: 'HK$',
  AED: 'د.إ',
  SAR: '﷼',
  QAR: '﷼',
  KWD: 'د.ك',
  BHD: '.د.ب',
  OMR: '﷼',
  JOD: 'د.ا',
  EGP: '£',
  ZAR: 'R',
  NGN: '₦',
  KES: 'KSh',
  GHS: '₵',
  TZS: 'TSh',
  UGX: 'USh',
  RWF: 'FRw',
  ETB: 'Br',
  MAD: 'د.م.',
  TND: 'د.ت',
  DZD: 'د.ج',
  LYD: 'ل.د',
  BRL: 'R$',
  ARS: '$',
  CLP: '$',
  COP: '$',
  PEN: 'S/',
  MXN: '$',
  RUB: '₽',
  TRY: '₺',
  PLN: 'zł',
  CZK: 'Kč',
  HUF: 'Ft',
  RON: 'lei',
  BGN: 'лв',
  HRK: 'kn',
  RSD: 'дин',
  UAH: '₴',
  BYN: 'Br',
  KZT: '₸',
  UZS: 'soʻm',
  KGS: 'сом',
  TJS: 'SM',
  TMT: 'T',
  AFN: '؋',
  IRR: '﷼',
  IQD: 'ع.د',
  SYP: '£',
  LBP: '£',
  ILS: '₪',
};

export const currencyNames: Record<Currency, string> = {
  USD: 'US Dollar',
  EUR: 'Euro',
  GBP: 'British Pound',
  JPY: 'Japanese Yen',
  CAD: 'Canadian Dollar',
  AUD: 'Australian Dollar',
  CNY: 'Chinese Yuan',
  INR: 'Indian Rupee',
  BDT: 'Bangladeshi Taka',
  PKR: 'Pakistani Rupee',
  LKR: 'Sri Lankan Rupee',
  NPR: 'Nepalese Rupee',
  MYR: 'Malaysian Ringgit',
  SGD: 'Singapore Dollar',
  THB: 'Thai Baht',
  VND: 'Vietnamese Dong',
  IDR: 'Indonesian Rupiah',
  PHP: 'Philippine Peso',
  KRW: 'South Korean Won',
  TWD: 'Taiwan Dollar',
  HKD: 'Hong Kong Dollar',
  AED: 'UAE Dirham',
  SAR: 'Saudi Riyal',
  QAR: 'Qatari Riyal',
  KWD: 'Kuwaiti Dinar',
  BHD: 'Bahraini Dinar',
  OMR: 'Omani Rial',
  JOD: 'Jordanian Dinar',
  EGP: 'Egyptian Pound',
  ZAR: 'South African Rand',
  NGN: 'Nigerian Naira',
  KES: 'Kenyan Shilling',
  GHS: 'Ghanaian Cedi',
  TZS: 'Tanzanian Shilling',
  UGX: 'Ugandan Shilling',
  RWF: 'Rwandan Franc',
  ETB: 'Ethiopian Birr',
  MAD: 'Moroccan Dirham',
  TND: 'Tunisian Dinar',
  DZD: 'Algerian Dinar',
  LYD: 'Libyan Dinar',
  BRL: 'Brazilian Real',
  ARS: 'Argentine Peso',
  CLP: 'Chilean Peso',
  COP: 'Colombian Peso',
  PEN: 'Peruvian Sol',
  MXN: 'Mexican Peso',
  RUB: 'Russian Ruble',
  TRY: 'Turkish Lira',
  PLN: 'Polish Zloty',
  CZK: 'Czech Koruna',
  HUF: 'Hungarian Forint',
  RON: 'Romanian Leu',
  BGN: 'Bulgarian Lev',
  HRK: 'Croatian Kuna',
  RSD: 'Serbian Dinar',
  UAH: 'Ukrainian Hryvnia',
  BYN: 'Belarusian Ruble',
  KZT: 'Kazakhstani Tenge',
  UZS: 'Uzbekistani Som',
  KGS: 'Kyrgyzstani Som',
  TJS: 'Tajikistani Somoni',
  TMT: 'Turkmenistani Manat',
  AFN: 'Afghan Afghani',
  IRR: 'Iranian Rial',
  IQD: 'Iraqi Dinar',
  SYP: 'Syrian Pound',
  LBP: 'Lebanese Pound',
  ILS: 'Israeli Shekel',
};

// Helper function to generate exchange rates for all currencies
const generateExchangeRates = (): Record<Currency, Record<Currency, number>> => {
  const currencies = Object.keys(currencyNames) as Currency[];
  const rates: Record<Currency, Record<Currency, number>> = {} as Record<Currency, Record<Currency, number>>;
  
  // Base rates against USD (simplified mock rates)
  const baseRates: Record<Currency, number> = {
    USD: 1,
    EUR: 0.85,
    GBP: 0.75,
    JPY: 110.5,
    CAD: 1.25,
    AUD: 1.35,
    CNY: 6.45,
    INR: 74.5,
    BDT: 85.2,
    PKR: 155.3,
    LKR: 200.5,
    NPR: 119.2,
    MYR: 4.15,
    SGD: 1.35,
    THB: 33.2,
    VND: 23500,
    IDR: 14250,
    PHP: 50.8,
    KRW: 1180,
    TWD: 28.5,
    HKD: 7.8,
    AED: 3.67,
    SAR: 3.75,
    QAR: 3.64,
    KWD: 0.30,
    BHD: 0.38,
    OMR: 0.38,
    JOD: 0.71,
    EGP: 15.7,
    ZAR: 14.8,
    NGN: 411,
    KES: 108,
    GHS: 6.1,
    TZS: 2320,
    UGX: 3550,
    RWF: 1030,
    ETB: 44.2,
    MAD: 9.1,
    TND: 2.8,
    DZD: 135,
    LYD: 4.5,
    BRL: 5.2,
    ARS: 98.5,
    CLP: 780,
    COP: 3850,
    PEN: 3.6,
    MXN: 20.1,
    RUB: 73.5,
    TRY: 8.4,
    PLN: 3.9,
    CZK: 21.8,
    HUF: 295,
    RON: 4.2,
    BGN: 1.66,
    HRK: 6.4,
    RSD: 100,
    UAH: 27.3,
    BYN: 2.6,
    KZT: 425,
    UZS: 10650,
    KGS: 84.7,
    TJS: 11.3,
    TMT: 3.5,
    AFN: 79.2,
    IRR: 42000,
    IQD: 1460,
    SYP: 2512,
    LBP: 1507,
    ILS: 3.2,
  };
  
  // Generate cross rates for all currency pairs
  currencies.forEach(fromCurrency => {
    rates[fromCurrency] = {} as Record<Currency, number>;
    currencies.forEach(toCurrency => {
      if (fromCurrency === toCurrency) {
        rates[fromCurrency][toCurrency] = 1;
      } else {
        // Convert through USD: from -> USD -> to
        const fromToUsd = 1 / baseRates[fromCurrency];
        const usdToTarget = baseRates[toCurrency];
        rates[fromCurrency][toCurrency] = fromToUsd * usdToTarget;
      }
    });
  });
  
  return rates;
};

// Mock exchange rates (in a real app, these would come from an API)
export const exchangeRates: Record<Currency, Record<Currency, number>> = generateExchangeRates();

export function formatCurrency(amount: number, currency: Currency): string {
  return `${currencySymbols[currency]}${amount.toFixed(2)}`;
}

export function convertCurrency(
  amount: number,
  fromCurrency: Currency,
  toCurrency: Currency
): number {
  if (fromCurrency === toCurrency) return amount;
  return amount * exchangeRates[fromCurrency][toCurrency];
}